<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>165, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>330, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>98</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IbayZyj/AAAAMgAAABsAAAAKAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAaRSBL/06Nc/9++gf/16M3/y5hi/41CCv8AAAAGAAAAAAAAAAAAAAAAAAAABKVb
        H7qcVx+4AAAAOZ5dJLejYCa/AAAAKgAAABUAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaOQw7/3btw/8mTWf+NQwz/AAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFa5hIv+fWyK1smco/7RqKv+2bS3/r2oteAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaQSBH/kUgR/wAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAQrmEi/6lgJLcAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAirYCLBAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqxgImIAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///+B////AP//
        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
        AADAPwAAgD8AAIAfAACEHwAAzn8AAP7/AAA=
</value>
  </data>
</root>